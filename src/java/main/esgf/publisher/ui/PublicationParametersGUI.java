/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package esgf.publisher.ui;

import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.io.File;
import java.nio.Buffer;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.accessibility.AccessibleContext;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author ganzberger1
 */
public class PublicationParametersGUI extends javax.swing.JFrame {

    SimplePublisher pcmdi;
    PreferenceForm pref = new PreferenceForm();
    List<File> files_to_publish = new ArrayList<File>();
    boolean filesSelectedYet = false;
    Queue<String> qe = new LinkedList<String>();
    int q_cnt = 0;
    DefaultCaret caret;
    PublicationParametersGUI.UpdateText writer;

    /**
     * Creates new form PublicationParametersGUI
     */
    public PublicationParametersGUI(SimplePublisher pcmdi) {
        this.pcmdi = pcmdi;
        initComponents();
        outputTextArea.setLineWrap(true);
        outputTextArea.setRows(100);

        this.setTitle("CSSEF Testbed Publication GUI");
        caret = (DefaultCaret) outputTextArea.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        writer = new UpdateText();
        writer.execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        Model = new javax.swing.JTextField();
        Experiment = new javax.swing.JFormattedTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        OpenIDPassword = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Publish_jButton = new javax.swing.JButton();
        CanceljButton = new javax.swing.JButton();
        OpenID = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        InstituteBox = new javax.swing.JComboBox();
        EnsembleBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        ModelBox = new javax.swing.JComboBox();
        SubExperiment = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        SubModelBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        ExperimentBox = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        FilesToPublish = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        SelectFilesToPublish = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        ProjectBox = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        realm = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        TimeFrequency = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        ExitButton = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        ProgressText = new javax.swing.JTextField();
        LoginButton = new javax.swing.JButton();
        LoginStatus = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Preference = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        Options = new javax.swing.JMenu();
        Tools = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 358, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        jLabel4.setText("Models");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jTextField1.setText("jTextField1");

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList2);

        Model.setText("jTextField1");
        Model.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModelActionPerformed(evt);
            }
        });

        Experiment.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        outputTextArea.setColumns(20);
        outputTextArea.setRows(5);
        outputTextArea.setText("Please provide your login and all relevant publication parameters, when done select Publish or Cancel\n");
        jScrollPane2.setViewportView(outputTextArea);

        jLabel5.setText("ESGF Single Dataset Publication Tool");

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jLabel1.setText("Password");

        jLabel2.setText("Model");

        jLabel3.setText("Experiment");

        Publish_jButton.setText("Publish");
        Publish_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Publish_jButtonActionPerformed(evt);
            }
        });

        CanceljButton.setText("Cancel");
        CanceljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanceljButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("UserID");

        jLabel7.setText("Institute");

        InstituteBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "LLNL" }));

        EnsembleBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "g00001" }));

        jLabel8.setText("Ensemble");

        ModelBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "clm4_0" }));

        SubExperiment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubExperimentActionPerformed(evt);
            }
        });

        jLabel9.setText("SubExperiment");

        SubModelBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "cn" }));

        jLabel10.setText("SubModel");

        ExperimentBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "land-uq" }));

        FilesToPublish.setColumns(20);
        FilesToPublish.setRows(5);
        jScrollPane5.setViewportView(FilesToPublish);

        jLabel11.setText("Files to Publish");

        SelectFilesToPublish.setText("Select");
        SelectFilesToPublish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectFilesToPublishActionPerformed(evt);
            }
        });

        jLabel12.setText("Choose Files To Publish (*)");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        ProjectBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "cssef", "c20c", "cmip5", "test" }));

        jLabel13.setText("Project");

        jLabel14.setText("Realm");

        jLabel15.setText("Time Frequency");

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        jProgressBar1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jProgressBar1StateChanged(evt);
            }
        });

        ProgressText.setEditable(false);

        LoginButton.setText("Login");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(ProjectBox, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(EnsembleBox, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(TimeFrequency, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(realm, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SubModelBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ModelBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(InstituteBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 149, Short.MAX_VALUE)
                                    .addComponent(SubExperiment)
                                    .addComponent(ExperimentBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(14, 14, 14))
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                        .addGap(52, 52, 52))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(OpenIDPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LoginButton)
                                .addGap(24, 24, 24)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator7, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(SelectFilesToPublish)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ProgressText, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(Publish_jButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(CanceljButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(ExitButton))
                                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(47, 47, 47))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(OpenID, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OpenID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel11))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(OpenIDPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(LoginButton))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ProjectBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InstituteBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(EnsembleBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ModelBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SubModelBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ExperimentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SubExperiment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TimeFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(realm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(SelectFilesToPublish)
                        .addComponent(jLabel12)
                        .addComponent(Publish_jButton)
                        .addComponent(CanceljButton)
                        .addComponent(ExitButton))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ProgressText)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(199, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(jPanel2);

        LoginStatus.setBackground(new java.awt.Color(255, 0, 51));
        LoginStatus.setText("Pending");

        jLabel16.setText("Login Status:");

        jMenu1.setText("File");

        Preference.setText("Preferences");
        Preference.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreferenceActionPerformed(evt);
            }
        });
        jMenu1.add(Preference);

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);

        Options.setText("Tools");

        Tools.setText("Options");
        Tools.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToolsActionPerformed(evt);
            }
        });
        Options.add(Tools);

        jMenuBar1.add(Options);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(LoginStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(LoginStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ModelActionPerformed

    private void CanceljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanceljButtonActionPerformed
        //pcmdi.setGUIDone();
        OpenIDPassword.setText(null);
        //this.dispose();
    }//GEN-LAST:event_CanceljButtonActionPerformed

    private void Publish_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Publish_jButtonActionPerformed
        String ensemble = (String) EnsembleBox.getSelectedItem();
        String experiment = (String) ExperimentBox.getSelectedItem();

        String institute = (String) InstituteBox.getSelectedItem();

        String model = (String) ModelBox.getSelectedItem();
        String subexperiment = SubExperiment.getText();
        String submodel = (String) SubModelBox.getSelectedItem();
        String project = (String) ProjectBox.getSelectedItem();
        String rlm = (String) this.realm.getText();
        String tf = (String) this.TimeFrequency.getText();
        pcmdi.setParameters(project, institute, experiment, subexperiment, model, submodel, ensemble,
                rlm, tf, getOpenID(), getOpenIDPassword(), this.files_to_publish);
        OpenIDPassword.setText(null);
        pcmdi.publish();
        //this.dispose();
    }//GEN-LAST:event_Publish_jButtonActionPerformed

    private void SelectFilesToPublishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectFilesToPublishActionPerformed
        setFileToPublish();
    }//GEN-LAST:event_SelectFilesToPublishActionPerformed

    private void SubExperimentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubExperimentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SubExperimentActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        pcmdi.setGUIDone();
        OpenIDPassword.setText(null);
        this.dispose();
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void ToolsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToolsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ToolsActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        pcmdi.setGUIDone();
        OpenIDPassword.setText(null);
        this.dispose();
       
    }//GEN-LAST:event_ExitActionPerformed

    private void PreferenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreferenceActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                pref.setVisible(true);
            }
        });
    }//GEN-LAST:event_PreferenceActionPerformed

    private void jProgressBar1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jProgressBar1StateChanged
    }//GEN-LAST:event_jProgressBar1StateChanged

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        pcmdi.setOpenid(getOpenID(), getOpenIDPassword() );
        pcmdi.login();
        OpenIDPassword.setText(null);
    }//GEN-LAST:event_LoginButtonActionPerformed

    public void setLogin(boolean value) {
        // uncomment if you only want one login per run...
        //OpenIDPassword.setEnabled(!value);
        //OpenID.setEnabled(!value);
        if (value) {
            LoginStatus.setText("Logged On");
            LoginStatus.setForeground(Color.BLUE);
        } else {
            LoginStatus.setText("Pending");
            LoginStatus.setForeground(new java.awt.Color(255, 0, 51));
        }
    }

    public void updateProgressBar(int progress) {
        if (progress == 0) {
            ProgressText.setBackground(new java.awt.Color(51, 255, 204));
            ProgressText.setText("Publishing...please wait..");
            jProgressBar1.setIndeterminate(true);

            // taskOutput.append("No progress yet\n");
        } else {
            ProgressText.setText("Publish...completed..");
            jProgressBar1.setIndeterminate(false);
            jProgressBar1.setString(null);
            jProgressBar1.setValue(progress);
            progressBarClear();

        }



    }

    private void progressBarClear() {
        Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    Thread.currentThread().sleep(10000);
                } catch (InterruptedException ex) {
                } finally {
                    ProgressText.setText("");
                    ProgressText.setBackground(new java.awt.Color(238, 238, 238));
                    FilesToPublish.setText("");
                    FilesToPublish.removeAll();
                    filesSelectedYet = false;
                    files_to_publish.clear();
                }
            }
        });

        thread.start();



    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus loPublish and feel */
        //<editor-fold defaultstate="collapsed" desc=" LoPublish and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default loPublish and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/loPublishandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PublicationParametersGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PublicationParametersGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PublicationParametersGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PublicationParametersGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PublicationParametersGUI(null).setVisible(true);
            }
        });
    }

    public void makeVisible(boolean value) {
        this.setVisible(value);
    }

    public AccessibleContext getCancel() {
        return CanceljButton.getAccessibleContext();
    }

    public AccessibleContext getPublish() {
        pcmdi.files_to_publish = this.files_to_publish;

        return Publish_jButton.getAccessibleContext();
    }

    public String getExperiment() {
        return Experiment.getText();
    }

    public String getModel() {
        return Model.getText();
    }

    public char[] getOpenIDPassword() {
        return OpenIDPassword.getPassword();
    }

    public String getOpenID() {
        return OpenID.getText();
    }

    public void setFileToPublish() {

        FilesToPublish.removeAll();
        filesSelectedYet = true;
        files_to_publish.clear();
        filesSelector();


        if (files_to_publish.isEmpty()) {
            return;
        }


        for (File f : files_to_publish) {
            FilesToPublish.append(f.getAbsolutePath() + "\n");
        }


    }

    /**
     *
     * @return
     */
    private boolean selectMore() {

        int more = JOptionPane.YES_OPTION;

        more = JOptionPane.showConfirmDialog(null, "Select more files for the dataset?", "No",
                JOptionPane.YES_NO_OPTION);


        return more == 0;

    }

    public void test() {
        for (int i = 0; i < 200; i++) {
            updateOutputTextArea("line " + i);
        }
    }

    public void updateOutputTextArea(String nextLine) {
        writer.writeLine(nextLine);
    }

    private boolean filesSelector() {

        JFileChooser chooser = new JFileChooser("Files to Publish to a single dataset");
        chooser.setMultiSelectionEnabled(true);
        File[] selected = null;

        ExampleFileFilter filter = new ExampleFileFilter();
        filter.addExtension("nc");

        filter.setDescription("NetCDF Files to publish");

        chooser.setFileFilter(filter);
        chooser.showOpenDialog(null);
        int returnVal = 0;
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            updateOutputTextArea("You selected these files: ");
            selected = chooser.getSelectedFiles();
            for (File file : selected) {
                updateOutputTextArea(file.getName());
                files_to_publish.add(file);
                //System.out.println("FilesSelector adding "+ file.getName());
            }
        }
        chooser.cancelSelection();
        if (selected == null) {
            files_to_publish.clear();
            return false;
        }

        return true;

    }

    public void updateInstitute(List<String> values) {
        this.InstituteBox.removeAllItems();
        for (String item : values) {
            InstituteBox.addItem(item);
        }

    }

    public void setDefInstitute(String value) {
        if (value != null) {
            InstituteBox.setSelectedItem(value);
        }
    }

    void updateEnsembles(List<String> values) {
        this.EnsembleBox.removeAllItems();
        for (String item : values) {
            EnsembleBox.addItem(item);
        }
    }

    public void setDefEnsemble(String value) {
        if (value != null) {
            EnsembleBox.setSelectedItem(value);
        }
    }

    void updateSubmodels(List<String> values) {
        this.SubModelBox.removeAllItems();
        for (String item : values) {
            SubModelBox.addItem(item);
        }
    }

    public void setDefSubmodel(String value) {
        if (value != null) {
            SubModelBox.setSelectedItem(value);
        }
    }

    void updateExperiments(List<String> values) {
        this.ExperimentBox.removeAllItems();
        for (String item : values) {
            ExperimentBox.addItem(item);
        }
    }

    public void setDefExperiment(String value) {
        if (value != null) {
            ExperimentBox.setSelectedItem(value);
        }
    }

    void updateModels(List<String> values) {
        this.ModelBox.removeAllItems();
        for (String item : values) {
            ModelBox.addItem(item);
        }
    }

    public void setDefModel(String value) {
        if (value != null) {
            ModelBox.setSelectedItem(value);
        }
    }

    void updateProjects(List<String> values) {
        this.ProjectBox.removeAllItems();
        for (String item : values) {
            ProjectBox.addItem(item);
        }
    }

    public void setDefProject(String value) {
        String project = this.pcmdi.getProject();
        if (project != null) {
            ProjectBox.setSelectedItem(project);
        }
    }

    /**
     * This class manages the output to the text area and insures that the caret
     * is updated in order to scroll with the data output properly
     */
    class UpdateText extends SwingWorker<String, String> {

        String nextLine = "";

        public void writeLine(String line) {
            this.nextLine = line;
            doInBackground();

        }

        @Override
        public String doInBackground() {

            publish(nextLine);

            return null;
        }

        @Override
        public void process(List<String> chunks) {
            for (String s : chunks) {
                if (outputTextArea.getDocument().getLength() > 0) {
                    outputTextArea.append("\n");
                }
                outputTextArea.append(s);
            }
            try {
                outputTextArea.setCaretPosition(outputTextArea.getLineStartOffset(outputTextArea.getLineCount() - 1));
            } catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }

        @Override
        public void done() {
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CanceljButton;
    private javax.swing.JComboBox EnsembleBox;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JButton ExitButton;
    private javax.swing.JFormattedTextField Experiment;
    private javax.swing.JComboBox ExperimentBox;
    private javax.swing.JTextArea FilesToPublish;
    private javax.swing.JComboBox InstituteBox;
    private javax.swing.JButton LoginButton;
    private javax.swing.JLabel LoginStatus;
    private javax.swing.JTextField Model;
    private javax.swing.JComboBox ModelBox;
    private javax.swing.JFormattedTextField OpenID;
    private javax.swing.JPasswordField OpenIDPassword;
    private javax.swing.JMenu Options;
    private javax.swing.JMenuItem Preference;
    private javax.swing.JTextField ProgressText;
    private javax.swing.JComboBox ProjectBox;
    private javax.swing.JButton Publish_jButton;
    private javax.swing.JButton SelectFilesToPublish;
    private javax.swing.JTextField SubExperiment;
    private javax.swing.JComboBox SubModelBox;
    private javax.swing.JTextField TimeFrequency;
    private javax.swing.JMenuItem Tools;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea outputTextArea;
    private javax.swing.JTextField realm;
    // End of variables declaration//GEN-END:variables
}
